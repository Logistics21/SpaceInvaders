{"version":3,"sources":["webpack:///webpack/bootstrap 257b6c3602a241cded8e","webpack:///./js/display.js","webpack:///./js/makeSprite.js","webpack:///./js/input.js","webpack:///./js/game.js","webpack:///./js/soundFx.js","webpack:///./js/main.js","webpack:///./js/laser.js","webpack:///./js/logic.js","webpack:///./js/spritePos.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,sFACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,0BAA0B;AACjD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACtNe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;;;;;;;;;;;ACjCA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;ACpCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;;;;;AC/BA,0BAAiC,eAAe;AAChD;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AAAA;AAAA;;AAEA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA,oBAA2B,sBAAsB;AACjD,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;AC3HA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA","file":"./game.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 257b6c3602a241cded8e","import Laser from './laser.js';\nimport * as Logic from './logic.js';\nimport MakeSprite from './makeSprite.js';\nimport Input from './input.js';\n\nclass Display {\n  constructor(canvas, ctx, sound, lvl) {\n    this.input = new Input();\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.nxtlvl = false;\n    this.width = this.canvas.width;\n    this.height = this.canvas.height;\n    this.makeSprite = new MakeSprite(this.canvas);\n    this.invaderArr = this.makeSprite.makeInvaders(lvl);\n    this.laserArr = [];\n    this.laserBase = this.makeSprite.makelaserBase();\n    this.frames = 0;\n    this.spFrame = 0;\n    this.lsFrame = 0;\n    this.lvFrame = 60;\n    this.dir = 1;\n    this.difficulty = 0.015;\n    this.sound = sound;\n    this.score = 0;\n    this.lvl = lvl;\n  }\n\n  update() {\n    this.frames++;\n\n    document.addEventListener(\"keydown\", (e) => {\n      this.input.down[e.keyCode] = true;\n    });\n\n    document.addEventListener(\"keyup\", (e) => {\n      delete this.input.down[e.keyCode];\n      delete this.input.pressed[e.keyCode];\n    });\n\n    if (this.laserBase.alive) {\n      if (this.input.isDown(37) || this.input.isDown(65)) {\n        this.laserBase.x -= 4;\n      }\n\n      if (this.input.isDown(39) || this.input.isDown(68)) {\n        this.laserBase.x += 4;\n      }\n\n      if (this.input.isDown(32)) {\n        if (this.laserBase.canFire) {\n          this.laser = new Laser(this.laserBase);\n          this.laser.fire();\n          this.sound.fX.shoot.play();\n          this.laserBase.canFire = false;\n        }\n      }\n\n      // prevent laserBase from leaving screen\n      this.laserBase.x = Math.max(Math.min(this.laserBase.x,\n        this.width - (this.laserBase.w * 3)), 0);\n\n      if (this.invaderArr.length > 0) {\n        // remove dead invaders\n        this.score = Logic.clearDead(this.invaderArr, this.score);\n\n        //iterate through lasers and update postion\n        Logic.updateLasers(this.width, this.laserArr);\n\n        // check to see if player shot exists\n        if (!this.laserBase.canFire && this.laser.y > -12) {\n          this.laser.update();\n        } else {\n          this.laserBase.canFire = true;\n        }\n\n        // check to see if laser has collided with alien\n        if(!this.laserBase.canFire) {\n          this.lvFrame = Logic.\n            hitInvader(this, this.invaderArr, this.sound,\n                       this.laserBase, this.laser,\n                       this.lvFrame, this.difficulty);\n        }\n\n        // check to see if alien laser hit player\n        for (let i = 0; i < this.laserArr.length; i++) {\n          let l = this.laserArr[i];\n\n          if (this.collision(l, this.laserBase)) {\n            this.playerDie();\n          };\n        }\n\n        function gra(min, max) {\n          return Math.random() * (max - min) + min;\n        }\n\n        if (Math.random() < this.difficulty) {\n          let alien = this.invaderArr[Math.floor(gra(0, this.invaderArr.length))];\n          let alienLaser = new Laser(alien);\n          this.laserArr.push(alienLaser);\n          alienLaser.fire();\n        }\n\n        // move aliens, drop and switch directions at edge of canvas\n        if (this.frames % this.lvFrame === 0) {\n          this.spFrame = (this.spFrame + 1) % 2;\n          this.dir = Logic.updateInvaders(this.width, this.lvFrame,\n                                          this.spFrame, this.invaderArr,\n                                          this.dir, this.sound)\n        }\n      } else {\n        this.nextLevel();\n      }\n    }\n  };\n\n  render() {\n    this.ctx.clearRect(0, 0, this.width, this.height);\n\n    for (let i = 0; i < this.invaderArr.length; i++) {\n      let a = this.invaderArr[i];\n      if (a.alive) {\n        Logic.drawSprite(this.ctx, a, this.spFrame);\n      } else {\n        Logic.drawSprite(this.ctx, a, 2);\n      }\n    }\n\n    this.ctx.save();\n    Logic.drawLasers(this.ctx, this.laserArr);\n\n    if (!this.laserBase.canFire) {\n      this.ctx.fillStyle = this.laser.color;\n      this.ctx.fillRect(this.laser.x, this.laser.y, this.laser.w, this.laser.h);\n    }\n\n    this.ctx.restore();\n\n    if (this.laserBase.alive) {\n      Logic.drawSprite(this.ctx, this.laserBase, 0);\n    } else {\n      if (this.frames % this.lvFrame !== 30) {\n        this.lsFrame = (this.lsFrame + 2) % 3;\n        Logic.drawSprite(this.ctx, this.laserBase, this.lsFrame);\n      }\n    }\n\n    Logic.drawScore(this.ctx, this.score);\n    Logic.drawLives(this.laserBase, this.width, this.ctx);\n  };\n\n  run() {\n    let loop = () => {\n  \t\tthis.update();\n  \t\tthis.render();\n      if (this.lvl > 5) {\n        this.victory();\n      } else if (this.laserBase.lives === 0) {\n        this.gameover(loop);\n      } else {\n        this.frameID = window.requestAnimationFrame(loop);\n      }\n  \t};\n\n  \twindow.requestAnimationFrame(loop, this.canvas);\n  };\n\n  collision(a, b) {\n    if (a.x < (b.x+b.w*3) && b.x < (a.w+a.x) &&\n        a.y < (b.y+b.h*3) && b.y < (a.h+a.y)) {\n      return true;\n    }\n  }\n\n  gameover(loop) {\n    this.frameID = window.requestAnimationFrame(loop);\n    setTimeout(() => {\n      window.cancelAnimationFrame(this.frameID);\n      this.ctx.clearRect(0, 0, this.width, this.height);\n      const go = document.getElementsByClassName('gameover');\n      Array.prototype.forEach.call(go, el => el.classList.remove('hidden'));\n    }, 1000);\n  }\n\n  victory() {\n    window.cancelAnimationFrame(this.frameID);\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    const vic = document.getElementsByClassName('victory');\n    Array.prototype.forEach.call(vic, el => el.classList.remove('hidden'));\n  }\n\n  playerDie() {\n    this.sound.fX.die.play();\n    this.laserBase.alive = false;\n    this.laserArr = [];\n    this.laserBase.lives--;\n    setTimeout(() => {\n      this.laserBase.alive = true;\n    }, 1500);\n  }\n\n  nextLevel() {\n    this.lvl++;\n    this.laserArr = [];\n    this.laser.destroy;\n    this.laserBase.lives += 1;\n    this.frames = 0;\n    this.dir = 1;\n    this.lvFrame = 60;\n    this.invaderArr = this.makeSprite.makeInvaders(this.lvl);\n  }\n}\n\nexport default Display;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/display.js\n// module id = 0\n// module chunks = 0","import { spSh } from './spritePos.js';\n\nclass MakeSprite {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.image = new Image();\n    this.image.src = 'sprites/invader.png';\n    this.invSprites = [\n      [new Sprite(this.image, spSh[0].x, spSh[0].y, spSh[0].width, spSh[0].height),\n       new Sprite(this.image, spSh[1].x, spSh[1].y, spSh[1].width, spSh[1].height),\n       new Sprite(this.image, spSh[6].x, spSh[6].y, spSh[6].width, spSh[6].height)],\n      [new Sprite(this.image, spSh[2].x, spSh[2].y, spSh[2].width, spSh[2].height),\n       new Sprite(this.image, spSh[3].x, spSh[3].y, spSh[3].width, spSh[3].height),\n       new Sprite(this.image, spSh[6].x, spSh[6].y, spSh[6].width, spSh[6].height)],\n      [new Sprite(this.image, spSh[4].x, spSh[4].y, spSh[4].width, spSh[4].height),\n       new Sprite(this.image, spSh[5].x, spSh[5].y, spSh[5].width, spSh[5].height),\n       new Sprite(this.image, spSh[6].x, spSh[6].y, spSh[6].width, spSh[6].height)],\n    ];\n    this.laserSprites = [\n        new Sprite(this.image, spSh[7].x, spSh[7].y, spSh[7].width, spSh[7].height),\n        new Sprite(this.image, spSh[8].x, spSh[8].y, spSh[8].width, spSh[8].height),\n        new Sprite(this.image, spSh[9].x, spSh[9].y, spSh[9].width, spSh[9].height)\n      ];\n  }\n\n  makeInvaders(lvl=1) {\n    let invaderArr = [];\n    let rows = [2, 1, 1, 0, 0];\n  \tfor (let i = 0, len = rows.length; i < len; i++) {\n  \t\tfor (let j = 0; j < 10; j++) {\n  \t\t\tlet a = rows[i];\n  \t\t\tinvaderArr.push({\n  \t\t\t\tsprite: this.invSprites[a],\n  \t\t\t\tx: 10 + j*45 + [0, 0, 5][a],\n  \t\t\t\ty: 35*(lvl) + i*45,\n  \t\t\t\tw: this.invSprites[a][0].w,\n  \t\t\t\th: this.invSprites[a][0].h,\n          alive: true,\n          type: \"alien\",\n          points: 10 + (10*a)\n  \t\t\t});\n  \t\t}\n  \t}\n\n    return invaderArr;\n  }\n\n  makelaserBase() {\n    const laserBase = {\n      sprite: this.laserSprites,\n      x: (this.canvas.width - this.laserSprites[0].w) / 2,\n      y: (this.canvas.height - (30 + this.laserSprites[0].h)),\n      w: this.laserSprites[0].w,\n      h: this.laserSprites[0].h,\n      canFire: true,\n      alive: true,\n      type: \"player\",\n      lives: 3\n    }\n\n    return laserBase;\n  }\n}\n\nfunction Sprite(img, x, y, w, h) {\n  this.img = img;\n  this.x = x;\n  this.y = y;\n  this.w = w;\n  this.h = h;\n}\n\nexport default MakeSprite;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/makeSprite.js\n// module id = 1\n// module chunks = 0","class Input {\n  constructor() {\n    this.down = {};\n    this.pressed = {};\n  }\n\n  isDown(code) {\n    return this.down[code];\n  }\n\n  isPressed(code) {\n    if (this.pressed[code]) {\n      return false;\n    } else if (this.down[code]) {\n      return this.pressed[code] = true;\n    }\n    return false;\n  }\n}\n\nexport default Input;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/input.js\n// module id = 2\n// module chunks = 0","import MakeSprite from './makeSprite.js';\nimport Display from './display.js';\nimport Input from './input.js';\nimport Game from './game.js';\nimport SoundFx from './soundFx';\n\nclass Game {\n  constructor() {\n    this.state = \"Home\";\n    this.canvas = document.getElementById('canvas');\n    this.ctx = canvas.getContext('2d');\n    this.sound = new SoundFx();\n    this.gameOver = false;\n    this.score = 0;\n    this.lives = 3;\n  }\n\n  init() {\n\n  }\n\n  start() {\n    // has scope of canvas\n    // draw instructions to screen\n  }\n\n  reset() {\n    this.score = 0;\n  }\n\n  toggleMute() {\n\n  }\n\n  gameover() {\n\n  }\n}\n\nexport default Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/game.js\n// module id = 3\n// module chunks = 0","class SoundFx {\n  constructor() {\n    this.fX = {\n      fast1: new Audio(\"sounds/fast1.wav\"),\n      fast2: new Audio(\"sounds/fast2.wav\"),\n      fast3: new Audio(\"sounds/fast3.wav\"),\n      fast4: new Audio(\"sounds/fast4.wav\"),\n      die: new Audio(\"sounds/die.wav\"),\n      shoot: new Audio(\"sounds/shoot.wav\"),\n      kill: new Audio(\"sounds/killinv.wav\")\n    }\n\n    this.muted = true;\n  }\n\n  mute() {\n    for (const key of Object.keys(this.fX)) {\n      this.fX[key].muted = true;\n    }\n\n    this.muted = true;\n  }\n\n  unmute() {\n    for (const key of Object.keys(this.fX)) {\n      this.fX[key].muted = false;\n    }\n\n    this.muted = false;\n  }\n}\n\n\nexport default SoundFx;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/soundFx.js\n// module id = 4\n// module chunks = 0","import Display from './display.js';\nimport Game from './game.js';\nimport SoundFx from './soundFx';\n\n\nfunction play() {\n  const modal = document.getElementsByClassName('modal');\n  Array.prototype.forEach.call(modal, el => el.classList.add('hidden'));\n\n  // const game = new Game();\n  const sound = new SoundFx();\n\n  document.getElementById(\"mute\").addEventListener(\"click\", function(e) {\n    if (sound.muted === true) {\n      sound.unmute();\n      e.target.innerHTML = 'Mute';\n    } else {\n      sound.mute();\n      e.target.innerHTML = 'Unmute';\n    }\n  });\n\n  main(sound);\n}\n\nfunction main(sound) {\n  document.removeEventListener('click', play);\n  const canvas = document.getElementById(\"canvas\");\n  const ctx = canvas.getContext('2d');\n  let lvl = 1;\n  const display = new Display(canvas, ctx, sound, lvl);\n  display.run();\n}\n\ndocument.addEventListener('DOMContentLoaded', (e) => {\n  document.addEventListener('click', play)\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/main.js\n// module id = 5\n// module chunks = 0","class Laser {\n  constructor(shooter) {\n    this.x = shooter.x + (shooter.sprite[0].w*1.5);\n    this.y = shooter.y;\n    this.color = \"#fff\";\n    this.w = 3;\n    this.h = 12;\n    this.active = false;\n    this.origin = shooter.type;\n  }\n\n  fire() {\n    if (!this.active) this.active = true;\n  }\n\n  update() {\n    this.origin === \"player\" ? this.y += -8 : this.y += 6\n  }\n\n  destroy() {\n    if (this.active) {\n      this.y = -12;\n      this.active = false;\n    }\n  }\n\n  draw() {\n\n  }\n}\n\nexport default Laser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/laser.js\n// module id = 6\n// module chunks = 0","export const drawSprite = (ctx, { sprite, x, y }, sp) => {\n  ctx.drawImage(sprite[sp].img,\n    sprite[sp].x, sprite[sp].y, sprite[sp].w, sprite[sp].h,\n    x, y, sprite[sp].w*3, sprite[sp].h*3);\n}\n\nexport const drawLasers = (ctx, arr) => {\n  for (let i = 0; i < arr.length; i++) {\n    let l = arr[i]\n    ctx.fillStyle = l.color;\n    ctx.fillRect(l.x, l.y, l.w, l.h);\n  }\n}\n\nexport const updateLasers = (width, arr) => {\n  for (let i = 0; i < arr.length; i++) {\n    let l = arr[i];\n    if (l.y > width) {\n      arr.splice(i, 1);\n      i--;\n      continue;\n    } else {\n      l.update();\n    }\n  }\n}\n\nexport const updateInvaders = (width, lvFrame, spFrame, arr, dir, sound) => {\n  let left = 0, right = width;\n  for (let i = 0; i < arr.length; i++) {\n    let a = arr[i];\n    a.x += 30 * dir;\n    left = Math.max(left, a.x + a.w);\n    right = Math.min(right, a.x);\n  }\n  if (left > width - 20 || right < 10) {\n    dir *= -1;\n    for (let i = 0; i < arr.length; i++) {\n      let a = arr[i]\n      a.x += 30 * dir;\n      a.y += 30;\n    }\n  }\n  if (arr.length > 0) {\n    if (spFrame === 0 && lvFrame < 20) {\n      sound.fX.fast2.play();\n    } else if (spFrame === 1 && lvFrame < 20) {\n      sound.fX.fast3.play();\n    } else if (spFrame === 0 && lvFrame < 30) {\n      sound.fX.fast2.play();\n    } else if (spFrame === 1 && lvFrame < 30) {\n      sound.fX.fast4.play();\n    } else if (spFrame === 0 && lvFrame < 70) {\n      sound.fX.fast1.play();\n    } else if (spFrame === 1 && lvFrame < 70) {\n      sound.fX.fast4.play();\n    }\n  }\n\n  return dir;\n}\n\nexport const hitInvader = (obj, arr, sound, player, laser, lvFrame, difficulty) => {\n  let len = arr.length;\n  for (let i = arr.length-1; i >= 0; i--) {\n    let a = arr[i];\n    if (obj.collision(laser, a)) {\n      // laser.destroy();\n      a.alive = false;\n      len--;\n      sound.fX.kill.play();\n      player.canFire = true;\n\n      switch (len) {\n        case 40:\n          lvFrame = 50;\n          break;\n        case 30:\n          lvFrame = 40;\n          break;\n        case 20:\n          difficulty = 0.03;\n          lvFrame = 30;\n          break;\n        case 10:\n          lvFrame = 25;\n          break;\n        case 1:\n          lvFrame = 6;\n          break;\n      }\n\n      break;\n    }\n  }\n\n  return lvFrame;\n}\n\nexport const clearDead = (arr, score, lvl) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (!arr[i].alive) {\n      score += arr[i].points;\n      arr.splice(i, 1);\n    }\n  }\n\n  return score;\n}\n\nexport const drawScore = (ctx, score) => {\n  ctx.font = \"20px Invader\";\n  ctx.fillStyle = \"white\";\n  ctx.fillText(\"Score: \"+score, 8, 20);\n}\n\nexport const drawLives = ({ sprite, x, y, lives }, width, ctx) => {\n  for (let i = 0; i < lives; i++) {\n    width -= (sprite[0].w*3)+10;\n    ctx.drawImage(sprite[0].img,\n      sprite[0].x, sprite[0].y, sprite[0].w, sprite[0].h,\n      width, 0, sprite[0].w*3, sprite[0].h*3);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/logic.js\n// module id = 7\n// module chunks = 0","export const spSh = [\n  { x: 18,\n    y: 0,\n    width: 14,\n    height: 9\n  },\n  {\n    x: 32,\n    y: 0,\n    width: 14,\n    height: 9\n  },\n  {\n    x: 47,\n    y: 0,\n    width: 13,\n    height: 9\n  },\n  {\n    x: 61,\n    y: 0,\n    width: 13,\n    height: 9\n  },\n  {\n    x: 75,\n    y: 0,\n    width: 12,\n    height: 9\n  },\n  {\n    x: 87,\n    y: 0,\n    width: 12,\n    height: 9\n  },\n  {\n    x: 99,\n    y: 0,\n    width: 14,\n    height: 9\n  },\n  {\n    x: 32,\n    y: 15,\n    width: 17,\n    height: 11\n  },\n  {\n    x: 50,\n    y: 15,\n    width: 17,\n    height: 11\n  },\n  {\n    x: 66,\n    y: 15,\n    width: 18,\n    height: 11\n  }\n];\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/spritePos.js\n// module id = 8\n// module chunks = 0"],"sourceRoot":""}